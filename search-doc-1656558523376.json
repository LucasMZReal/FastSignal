[{"title":"ScriptConnection","type":0,"sectionRef":"#","url":"api/ScriptConnection","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"ScriptConnection","url":"api/ScriptConnection#properties","content":" "},{"title":"Connected​","type":1,"pageTitle":"ScriptConnection","url":"api/ScriptConnection#Connected","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ScriptConnection.Connected: boolean A boolean which determines if a ScriptConnection is active or not. "},{"title":"Functions​","type":1,"pageTitle":"ScriptConnection","url":"api/ScriptConnection#functions","content":" "},{"title":"Disconnect​","type":1,"pageTitle":"ScriptConnection","url":"api/ScriptConnection#Disconnect","content":"&lt;/&gt; ScriptConnection:Disconnect() → () Disconnects a connection, any :Fire calls from now on will not invoke this connection's handler. local connection = ScriptSignal:Connect(function() end) connection.Connected -&gt; true connection:Disconnect() connection.Connected -&gt; false  "},{"title":"ScriptSignal","type":0,"sectionRef":"#","url":"api/ScriptSignal","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ScriptSignal","url":"api/ScriptSignal#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ScriptSignal","url":"api/ScriptSignal#new","content":"&lt;/&gt; ScriptSignal.new() → ScriptSignal Creates a ScriptSignal object.  "},{"title":"Is​","type":1,"pageTitle":"ScriptSignal","url":"api/ScriptSignal#Is","content":"&lt;/&gt; ScriptSignal.Is(object: any) → boolean Returns a boolean determining if the object is a ScriptSignal. local janitor = Janitor.new() local signal = ScriptSignal.new() ScriptSignal.Is(signal) -&gt; true ScriptSignal.Is(janitor) -&gt; false   "},{"title":"IsActive​","type":1,"pageTitle":"ScriptSignal","url":"api/ScriptSignal#IsActive","content":"&lt;/&gt; ScriptSignal:IsActive() → boolean Returns a boolean determing if a ScriptSignal object is active. ScriptSignal:IsActive() -&gt; true ScriptSignal:Destroy() ScriptSignal:IsActive() -&gt; false   "},{"title":"Connect​","type":1,"pageTitle":"ScriptSignal","url":"api/ScriptSignal#Connect","content":"&lt;/&gt; ScriptSignal:Connect(handler: (...: any) → ()) → ScriptConnection Connects a handler to a ScriptSignal object. ScriptSignal:Connect(function(text) print(text) end) ScriptSignal:Fire(&quot;Something&quot;) ScriptSignal:Fire(&quot;Something else&quot;) -- &quot;Something&quot; and then &quot;Something else&quot; are printed   "},{"title":"Once​","type":1,"pageTitle":"ScriptSignal","url":"api/ScriptSignal#Once","content":"&lt;/&gt; ScriptSignal:Once(handler: (...: any) → ()) → ScriptConnection Connects a handler to a ScriptSignal object, but only allows that connection to run once. Any :Fire calls called afterwards won't trigger anything. ScriptSignal:Once(function() print(&quot;Connection fired&quot;) end) ScriptSignal:Fire() ScriptSignal:Fire() -- &quot;Connection fired&quot; is only fired once   "},{"title":"Wait​","type":1,"pageTitle":"ScriptSignal","url":"api/ScriptSignal#Wait","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; ScriptSignal:Wait() → ...any Yields the thread until a :Fire call occurs, returns what the signal was fired with. task.spawn(function() print( ScriptSignal:Wait() ) end) ScriptSignal:Fire(&quot;Arg&quot;, nil, 1, 2, 3, nil) -- &quot;Arg&quot;, nil, 1, 2, 3, nil are printed   "},{"title":"Fire​","type":1,"pageTitle":"ScriptSignal","url":"api/ScriptSignal#Fire","content":"&lt;/&gt; ScriptSignal:Fire(...: any) → () Fires a ScriptSignal object with the arguments passed. ScriptSignal:Connect(function(text) print(text) end) ScriptSignal:Fire(&quot;Some Text...&quot;) -- &quot;Some Text...&quot; is printed twice   "},{"title":"DisconnectAll​","type":1,"pageTitle":"ScriptSignal","url":"api/ScriptSignal#DisconnectAll","content":"&lt;/&gt; ScriptSignal:DisconnectAll() → () Disconnects all connections from a ScriptSignal object without making it unusable. local connection = ScriptSignal:Connect(function() end) connection.Connected -&gt; true ScriptSignal:DisconnectAll() connection.Connected -&gt; false   "},{"title":"Destroy​","type":1,"pageTitle":"ScriptSignal","url":"api/ScriptSignal#Destroy","content":"&lt;/&gt; ScriptSignal:Destroy() → () Destroys a ScriptSignal object, disconnecting all connections and making it unusable. ScriptSignal:Destroy() local connection = ScriptSignal:Connect(function() end) connection.Connected -&gt; false  "}]