"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),m=c(a),d=i,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return a?n.createElement(h,l(l({ref:t},p),{},{components:a})):n.createElement(h,l({ref:t},p))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,l=new Array(o);l[0]=d;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[m]="string"==typeof e?e:i,l[1]=r;for(var c=2;c<o;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},76647:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>s});var n=a(87462),i=(a(67294),a(3905));const o={},l="[*Fast*Signal](https://github.com/RBLXUtils/FastSignal)",r={type:"mdx",permalink:"/FastSignal/",source:"@site/pages/index.md",title:"[*Fast*Signal](https://github.com/RBLXUtils/FastSignal)",description:"FastSignal is a Signal library made with consistency and expectable behaviour in mind, it is efficient, easy to use, and widely compatible.",frontMatter:{}},s=[{value:"What about GoodSignal?",id:"what-about-goodsignal",level:2},{value:"Installation",id:"installation",level:2},{value:"From GitHub",id:"from-github",level:3},{value:"From Roblox",id:"from-roblox",level:3},{value:"From Wally",id:"from-wally",level:3}],c={toc:s},p="wrapper";function m(e){let{components:t,...a}=e;return(0,i.kt)(p,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"fastsignal"},(0,i.kt)("a",{parentName:"h1",href:"https://github.com/RBLXUtils/FastSignal"},(0,i.kt)("em",{parentName:"a"},"Fast"),"Signal")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Fast"),"Signal is a Signal library made with consistency and expectable behaviour in mind, it is efficient, easy to use, and widely compatible."),(0,i.kt)("h2",{id:"what-about-goodsignal"},"What about GoodSignal?"),(0,i.kt)("p",null,"GoodSignal while being an interesting implementation (that even helped ",(0,i.kt)("em",{parentName:"p"},"Fast"),"Signal be developed), it suffers from some issues."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"GoodSignal does not support .Connected.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"GoodSignal is made only for Immediate mode, and does not have a Deferred mode option, while sleitnick's fork has ",(0,i.kt)("inlineCode",{parentName:"p"},":FireDeferred"),", it's not a very optimal solution as it's not a toggle, you have to go out of your way to use Deferred and it's inconvienient.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"GoodSignal has no :Destroy, only :DisconnectAll which means you can\u2019t stop new connections from being created.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"GoodSignal\u2019s :DisconnectAll does not call :Disconnect on connections, this causes an ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/stravant/goodsignal/issues/4"},"inconsistency with RBXScriptSignals."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"GoodSignal\u2019s connections and linked list nodes are the same reference, which causes issues such as disconnected connections can leak the connection\u2019s function, signal, and other connections if not cleared properly.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"GoodSignal\u2019s classes are strict, meaning you can index members that don\u2019t exist, this is pretty useless, and means that empty fields in a class are false, and not nil, which is something that makes forking a bit harder and it takes a bit of time to process.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"GoodSignal\u2019s connections are not immediately compatible with Janitor, or Maid.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"GoodSignal\u2019s methods don\u2019t have any type declaration at all, which would make it way nicer to use."))),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Fast"),"Signal fixes all these issues.\n",(0,i.kt)("em",{parentName:"p"},"Fast"),"Signal's selling point is parity with RBXScriptSignal's API and ",(0,i.kt)("em",{parentName:"p"},"familiarity"),"."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Fast"),"Signal has a familiar API and behaviour to RBXScriptSignals and other signal libraries, which help you work faster, these help you not have headaches while using ",(0,i.kt)("em",{parentName:"p"},"Fast"),"Signal."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("h3",{id:"from-github"},"From GitHub"),(0,i.kt)("p",null,"You can get a ",(0,i.kt)("inlineCode",{parentName:"p"},".rbxmx")," file from a release on GitHub, you can do that by visiting ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/RBLXUtils/FastSignal/releases"},"FastSignal's releases.")),(0,i.kt)("h3",{id:"from-roblox"},"From Roblox"),(0,i.kt)("p",null,"You can get FastSignal directly from Roblox, via its Roblox Model.\nYou can find it ",(0,i.kt)("a",{parentName:"p",href:"https://www.roblox.com/library/6532460357"},"here.")),(0,i.kt)("h3",{id:"from-wally"},"From Wally"),(0,i.kt)("p",null,"You can get FastSignal as a dependancy on Wally.\nAdd ",(0,i.kt)("inlineCode",{parentName:"p"},"lucasmzreal/fastsignal")," in your dependencies and you're done."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'Signal = "lucasmzreal/fastsignal@10.2.1"\n')),(0,i.kt)("a",{href:"https://github.com/LucasMZReal/FastSignal/releases"},(0,i.kt)("img",{alt:"Releases",src:"https://img.shields.io/github/v/release/LucasMZReal/FastSignal"})),(0,i.kt)("a",{href:"https://github.com/LucasMZReal/FastSignal"},(0,i.kt)("img",{alt:"",src:"https://img.shields.io/github/downloads/LucasMZReal/FastSignal/total"})))}m.isMDXComponent=!0}}]);